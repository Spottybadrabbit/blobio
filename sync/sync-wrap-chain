#!/bin/bash
#
#  Synopsis:
#	Efficently sync a remote blobio server from a local chain of wrap sets.
#  Usage:
#	sync-wrap-chain <local|remote> <remote host> <stop brr log count>
#  Exit Status:
#	0	no error, all blobs sunk across the chain of wrap sets.
#	1	wrong number of arguments
#	2	unknown error
#

PROG=$(basename $0)

log()
{
	echo "$PROG: $@"
}

die()
{
	STATUS=$1
	case "$STATUS" in
	[0-9])
		shift
		;;
	*)
		STATUS=2
		;;
	esac

	log "ERROR: $@" >&2
	exit $STATUS
}

leave()
{
	#  zap the temporary work directory
	if [ -n "$WORK_DIR" -a -e "$WORK_DIR" ];  then
		cd ..
		rm -rf $WORK_DIR
	fi
	log 'good bye, cruel world'
	exit
}

test $# = 3 || die 1 "wrong number of arguments, got $#, expected 3"
log 'hello, world'
trap leave EXIT QUIT INT TERM

DIRECTION=$1
SYNC_HOST=$2
STOP_BRR_LOG_COUNT=$3

log "direction: $DIRECTION"
log "sync host: $SYNC_HOST"
log "stop brr log count: $STOP_BRR_LOG_COUNT"

#  Local profile in $BLOBIO_ROOT/etc/profile

test -n "$BLOBIO_ROOT" || die 'env variable not defined: BLOBIO_ROOT'
cd $BLOBIO_ROOT || die "cd $BLOBIO_ROOT failed: exit status=$?"
test -r etc/profile || die "profile does not exit: $(pwd)/etc/profile"
. etc/profile || die "$(pwd)/etc/profile failed"
test -n "$BLOBIO_SERVICE" || die 'environment not defined: BLOBIO_SERVICE'

#  Remote profile in $BLOBIO_ROOT/sync/host/$SYNC_HOST/etc/profile

SYNC_ROOT=$BLOBIO_ROOT/sync/host/$SYNC_HOST
log "sync root: $SYNC_ROOT"
cd $SYNC_ROOT || die "cd $SYNC_ROOT failed: exit status=$?"
test -r etc/profile || die "sync profile does not exit: $(pwd)/etc/profile"
. etc/profile || die "$(pwd)/etc/profile failed"
test -n "$BLOBIO_SYNC_SSH_AUTH" ||
			die 'environment not defined: BLOBIO_SYNC_SSH_AUTH'
log "sync ssh auth: $BLOBIO_SYNC_SSH_AUTH"

#  make the work dir

TMPDIR=${TMPDIR:=/tmp}
WORK_DIR=$TMPDIR/$PROG-$$.d
log "work dir: $WORK_DIR"
mkdir $WORK_DIR || die "mkdir $WORK_DIR failed: exit status=$?"
cd $WORK_DIR || die "cd $WORK_DIR failed: exit status=$?"

log "walking $STOP_BRR_LOG_COUNT brr logs back ..."
walk-wrap-set --stop-brr-log-count $STOP_BRR_LOG_COUNT >WALK_WRAP_SET	||
			die "walk-wrap-set failed: exit status=$?"
test -s WALK_WRAP_SET || die 'walk wrap set is empty'

grep '#' WALK_WRAP_SET
ls
